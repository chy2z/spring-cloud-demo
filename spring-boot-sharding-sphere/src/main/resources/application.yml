server:
  port: 9090
  servlet:
    context-path: /

#配置数据源
spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
     names: ds0
     ds0:
       # 数据库访问配置, 使用druid数据源
       type: com.alibaba.druid.pool.DruidDataSource
       driver-class-name: com.mysql.cj.jdbc.Driver
       url: jdbc:mysql://localhost:3306/spboot?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
       username: root
       password: wmzycn
       # 连接池配置
       initial-size: 5
       min-idle: 5
       max-active: 20
       # 连接等待超时时间
       max-wait: 30000
       # 配置检测可以关闭的空闲连接间隔时间
       time-between-eviction-runs-millis: 60000
       # 配置连接在池中的最小生存时间
       min-evictable-idle-time-millis: 300000
       validation-query: select 'x'
       test-while-idle: true
       test-on-borrow: false
       test-on-return: false
       # 打开PSCache，并且指定每个连接上PSCache的大小
       pool-prepared-statements: true
       max-open-prepared-statements: 20
       max-pool-prepared-statement-per-connection-size: 20
       # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
       filters: stat,wall
    sharding:
      #默认数据源
      default-data-source-name: ds0
      #表配置
      tables:
        # 订单表
        order:
          actual-data-nodes: ds0.order_$->{0..3}
          table-strategy:
             standard:
                sharding-column: id
                precise-algorithm-class-name: org.chy.carorder.config.sharding.DefaultPreciseShardingAlgorithm
          key-generator:
            column: id
            # 自定义分布式id
            type: TREND_INCREASING
        # 订单行表
        order_line:
          actual-data-nodes: ds0.order_line_$->{0..3}
          table-strategy:
              standard:
                sharding-column: orderId
                precise-algorithm-class-name: org.chy.carorder.config.sharding.DefaultPreciseShardingAlgorithm
          key-generator:
              column: id
              # 自定义分布式id
              type: TREND_INCREASING
      #关联表
      binding-tables: order,order_line
      #广播表
      broadcast-tables: users,car_order

#mybatis配置
mybatis:
  typeAliasesPackage: org.chy.carorder.entity
  mapperLocations: classpath:mapper/*.xml

#配置分页插件
pagehelper:
  helperDialect: mysql # 设置数据库类型
  reasonable: true #开启合理化：页码<:0 查询第一页，页码>:总页数查询最后一页
  supportMethodsArguments: true #支持通过 Mapper 接口参数来传递分页参数
  params: count:countSql   # 参数  成员变量 : ${ xx}



